// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Universal.EBI.Reports.API.Data;

namespace Universal.EBI.Reports.API.Migrations
{
    [DbContext(typeof(ReportContext))]
    [Migration("20211019142859_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChildResponsible", b =>
                {
                    b.Property<Guid>("ChildrenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResponsiblesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChildrenId", "ResponsiblesId");

                    b.HasIndex("ResponsiblesId");

                    b.ToTable("ChildResponsible");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("EducatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PublicPlace")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ResponsibleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ChildId")
                        .IsUnique()
                        .HasFilter("[ChildId] IS NOT NULL");

                    b.HasIndex("EducatorId")
                        .IsUnique()
                        .HasFilter("[EducatorId] IS NOT NULL");

                    b.HasIndex("ResponsibleId")
                        .IsUnique()
                        .HasFilter("[ResponsibleId] IS NOT NULL");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Child", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgeGroupType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraryOfEntry")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HoraryOfExit")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("Church")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClassroomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lunch")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MeetingTime")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Educator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FunctionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId")
                        .IsUnique()
                        .HasFilter("[ClassroomId] IS NOT NULL");

                    b.ToTable("Educators");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EducatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<string>("PhoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResponsibleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("EducatorId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Responsible", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluded")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinshipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Responsibles");
                });

            modelBuilder.Entity("ChildResponsible", b =>
                {
                    b.HasOne("Universal.EBI.Reports.API.Models.Child", null)
                        .WithMany()
                        .HasForeignKey("ChildrenId")
                        .IsRequired();

                    b.HasOne("Universal.EBI.Reports.API.Models.Responsible", null)
                        .WithMany()
                        .HasForeignKey("ResponsiblesId")
                        .IsRequired();
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Address", b =>
                {
                    b.HasOne("Universal.EBI.Reports.API.Models.Child", "Child")
                        .WithOne("Address")
                        .HasForeignKey("Universal.EBI.Reports.API.Models.Address", "ChildId");

                    b.HasOne("Universal.EBI.Reports.API.Models.Educator", "Educator")
                        .WithOne("Address")
                        .HasForeignKey("Universal.EBI.Reports.API.Models.Address", "EducatorId");

                    b.HasOne("Universal.EBI.Reports.API.Models.Responsible", "Responsible")
                        .WithOne("Address")
                        .HasForeignKey("Universal.EBI.Reports.API.Models.Address", "ResponsibleId");

                    b.Navigation("Child");

                    b.Navigation("Educator");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Child", b =>
                {
                    b.HasOne("Universal.EBI.Reports.API.Models.Classroom", "Classroom")
                        .WithMany("Children")
                        .HasForeignKey("ClassroomId");

                    b.OwnsOne("Universal.EBI.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ChildId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("ChildId");

                            b1.ToTable("Children");

                            b1.WithOwner()
                                .HasForeignKey("ChildId");
                        });

                    b.Navigation("Classroom");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Educator", b =>
                {
                    b.HasOne("Universal.EBI.Reports.API.Models.Classroom", "Classroom")
                        .WithOne("Educator")
                        .HasForeignKey("Universal.EBI.Reports.API.Models.Educator", "ClassroomId");

                    b.OwnsOne("Universal.EBI.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("EducatorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("EducatorId");

                            b1.ToTable("Educators");

                            b1.WithOwner()
                                .HasForeignKey("EducatorId");
                        });

                    b.Navigation("Classroom");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Phone", b =>
                {
                    b.HasOne("Universal.EBI.Reports.API.Models.Child", "Child")
                        .WithMany("Phones")
                        .HasForeignKey("ChildId");

                    b.HasOne("Universal.EBI.Reports.API.Models.Educator", "Educator")
                        .WithMany("Phones")
                        .HasForeignKey("EducatorId");

                    b.HasOne("Universal.EBI.Reports.API.Models.Responsible", "Responsible")
                        .WithMany("Phones")
                        .HasForeignKey("ResponsibleId");

                    b.Navigation("Child");

                    b.Navigation("Educator");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Responsible", b =>
                {
                    b.OwnsOne("Universal.EBI.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ResponsibleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("ResponsibleId");

                            b1.ToTable("Responsibles");

                            b1.WithOwner()
                                .HasForeignKey("ResponsibleId");
                        });

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Child", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Classroom", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Educator");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Educator", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("Universal.EBI.Reports.API.Models.Responsible", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
